export type WasmInterface = {
	getAllResources: () => { graphics: { background: { data: { type: "Uint8Array", ptr: number, len: number }, width: number, height: number, scale: number }, machine: { data: { type: "Uint8Array", ptr: number, len: number }, width: number, height: number, scale: number }, chamber_increase: { sprite_sheet: { data: { type: "Uint8Array", ptr: number, len: number }, width: number, height: number, scale: number }, animation_data: { framerate: number, frames: number[][] } }, chamber_materialize: { sprite_sheet: { data: { type: "Uint8Array", ptr: number, len: number }, width: number, height: number, scale: number }, animation_data: { framerate: number, frames: number[][] } }, ghost_idle_side: { sprite_sheet: { data: { type: "Uint8Array", ptr: number, len: number }, width: number, height: number, scale: number }, animation_data: { framerate: number, frames: number[][] } }, ghost_idle_front: { sprite_sheet: { data: { type: "Uint8Array", ptr: number, len: number }, width: number, height: number, scale: number }, animation_data: { framerate: number, frames: number[][] } }, ghost_idle_back: { sprite_sheet: { data: { type: "Uint8Array", ptr: number, len: number }, width: number, height: number, scale: number }, animation_data: { framerate: number, frames: number[][] } }, ghost_fixing: { sprite_sheet: { data: { type: "Uint8Array", ptr: number, len: number }, width: number, height: number, scale: number }, animation_data: { framerate: number, frames: number[][] } } }, config: { screen: { width: number, height: number }, controller_dead_zone: number, victory_span_ms: number, fail_span_ms: number, player_radius: number, player_speed: number, player_direction_smoothness: number, player_dash_speed: number, player_dash_duration_ms: number, player_dash_cooldown_ms: number, player_repair_delay_ms: number, levels: { title: { type: "Uint8Array", ptr: number, len: number }, duration_ms: number, breakdown_delay_ms: number, required_online: number }[], fix_proximity: number, fix_snap_offset: { x: number, y: number }, chamber_location: { x: number, y: number }, machine_locations: { x: number, y: number }[] } }, 
	update: (arg0: { time_ms: number, joystick: { x: number, y: number, interact: boolean, dash: boolean }, keyboard: { left: boolean, right: boolean, up: boolean, down: boolean, interact: boolean, dash: boolean } }) => { win_time_ms: number | null, in_danger: boolean, current_level: number, level_start_time_ms: number, was_interacting: boolean, was_dashing: boolean, last_time_ms: number | null, chamber_progress: number, machine_states: { delay_until_breakdown_ms: number, broken: boolean }[], victory_time_ms: number | null, fail_time_ms: number | null, player: { position: { x: number, y: number }, movement_direction: { x: number, y: number }, view_direction: "Left" | "Right" | "Up" | "Down", action: "Idle" | "Fixing", target_machine_index: number, dash_time_ms: number, last_repair_time_ms: number } }, 
}